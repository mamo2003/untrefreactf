{"ast":null,"code":"import { DateTime } from \"luxon\";\nimport Swal from \"sweetalert2\";\nconst useReceive = e => {\n  e.preventDefault();\n  let metros = parseInt(e.target.ingreso.value);\n  let propiedad = e.target.propiedad.value;\n  let zona = e.target.zona.value;\n  let PrecioMetro = 2;\n  let factor = 1.5;\n  let totalPrecioMetro = PrecioMetro * metros;\n  console.log(totalPrecioMetro);\n  let precioZona = pars(zona);\n  console.log(precioZona);\n  let preciopropiedad = parseFloat(propiedad);\n  console.log(preciopropiedad);\n  let precio = totalPrecioMetro + precioZona + preciopropiedad;\n  console.log(precio);\n  let preciofinal = precio.toFixed(2);\n  if (metros > 10 && metros < 501 && isNaN(metros) === false) {\n    let historial = {\n      'id': Math.trunc(Math.random() * 1000),\n      'fecha': DateTime.now().toLocaleString() + ' ' + DateTime.now().toLocaleString(DateTime.TIME_24_SIMPLE),\n      'propiedad': propiedad,\n      'ubicacion': zona,\n      'metrosCuadrados': metros,\n      'poliza': preciofinal\n    };\n    const local = JSON.parse(localStorage.getItem(\"datos\")) || [];\n    local.push(historial);\n    localStorage.setItem(\"datos\", JSON.stringify(local));\n    Swal.fire({\n      icon: 'success',\n      title: 'Cotizacion guardada con exito',\n      showConfirmButton: false,\n      timer: 1000\n    });\n    document.querySelector(\".price\").innerHTML = `Cotizacion final $${historial.poliza}`;\n  } else if (metros < 10) {\n    Swal.fire({\n      icon: 'error',\n      title: 'te olvidas de algo!',\n      text: 'el minimo son 10 mts2'\n    });\n  } else if (metros > 500) {\n    Swal.fire({\n      icon: 'error',\n      title: 'te olvidas de algo!',\n      text: 'el maximo a cotizar es de  500 mts2'\n    });\n  } else if (isNaN(metros) === true) {\n    Swal.fire({\n      icon: 'error',\n      title: 'te olvidas de algo!',\n      text: 'debes agregar los metros cuadrados'\n    });\n  }\n};\nexport default useReceive;","map":{"version":3,"names":["DateTime","Swal","useReceive","e","preventDefault","metros","parseInt","target","ingreso","value","propiedad","zona","PrecioMetro","factor","totalPrecioMetro","console","log","precioZona","pars","preciopropiedad","parseFloat","precio","preciofinal","toFixed","isNaN","historial","Math","trunc","random","now","toLocaleString","TIME_24_SIMPLE","local","JSON","parse","localStorage","getItem","push","setItem","stringify","fire","icon","title","showConfirmButton","timer","document","querySelector","innerHTML","poliza","text"],"sources":["C:/Users/Usuario/Desktop/untrefreactf/src/components/useReceive.jsx"],"sourcesContent":["import { DateTime } from \"luxon\";\nimport Swal from \"sweetalert2\";\n\nconst useReceive = (e) => {\n    e.preventDefault();\n\n    let metros = parseInt(e.target.ingreso.value);\n    let propiedad =e.target.propiedad.value; \n    let zona = e.target.zona.value;\n    let PrecioMetro = 2;\n    let factor= 1.5;\n    \n    let totalPrecioMetro = PrecioMetro * metros;\n    console.log(totalPrecioMetro )\n    let precioZona = pars(zona); \n    console.log(precioZona)\n    let preciopropiedad= parseFloat(propiedad);\n    console.log(preciopropiedad)\nlet precio = totalPrecioMetro + precioZona+ preciopropiedad;\n    console.log(precio)\nlet preciofinal = precio.toFixed(2)\n\n    if ((metros > 10 && metros < 501) && isNaN(metros) === false) {\n\n        let historial = {\n            'id': Math.trunc(Math.random() * 1000),\n            'fecha': DateTime.now().toLocaleString() + ' ' + DateTime.now().toLocaleString(DateTime.TIME_24_SIMPLE),\n            'propiedad': propiedad,\n            'ubicacion': zona,\n            'metrosCuadrados': metros,\n            'poliza':  preciofinal,\n        }\n\n        const local = JSON.parse(localStorage.getItem(\"datos\")) || [];\n        local.push(historial);\n        localStorage.setItem(\"datos\", JSON.stringify(local));\n        Swal.fire({\n        icon: 'success',\n        title: 'Cotizacion guardada con exito',\n        showConfirmButton: false,\n        timer: 1000\n        });\n\n\n        document.querySelector(\".price\").innerHTML = `Cotizacion final $${historial.poliza}`;\n    } else if (metros < 10) {        Swal.fire({\n                icon: 'error',\n                title: 'te olvidas de algo!',\n                text: 'el minimo son 10 mts2',\n            })\n        ;\n        \n    } else if (metros > 500) {\n        Swal.fire({\n                icon: 'error',\n                title: 'te olvidas de algo!',\n                text: 'el maximo a cotizar es de  500 mts2',\n            })\n        ;\n    } else if (isNaN(metros) === true) {\n        Swal.fire({\n                icon: 'error',\n                title: 'te olvidas de algo!',\n                text: 'debes agregar los metros cuadrados',\n            })\n            ;\n    }\n}\nexport default useReceive;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}