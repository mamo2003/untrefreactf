{"ast":null,"code":"import { DateTime } from \"luxon\";\nimport Swal from \"sweetalert2\";\nconst useReceive = e => {\n  e.preventDefault();\n  let metros = parseInt(e.target.ingreso.value);\n  let propiedad = e.target.propiedad.value;\n  let zona = e.target.zona.value;\n  let PrecioMetro = 20;\n  let PrecioZona = parseInt(e.target.zona.value);\n  console.log(PrecioZona);\n  let PrecioPropiedad = parseInt(e.target.propiedad.value);\n  console.log(PrecioPropiedad);\n  // console.log(TotalPrecioMetro)\n  // let PrecioPropiedad= parseInt(propiedad.trim());\n  // console.log(PrecioPropiedad)\n  // let PrecioZona = zona; \n  // console.log(PrecioZona)\n  let precioZonaNorte = 0;\n  let precioZonaSur = 0;\n  let precioZonaEsteOeste = 0;\n  // let PrecioFinal = TotalPrecioMetro + (PrecioZona + PrecioPropiedad)*Factor;\n  // console.log(PrecioFinal)\n  if (zona === \"Zona Norte\" || zona === \"Zona Centro\" || zona === \"Barrio Privado\") {\n    precioZonaNorte = precioZonaNorte + 200;\n  }\n  if (zona === \"zona sur\" || zona === \"subirbio\") {\n    precioZonaSur = precioZonaSur + 100;\n  }\n  if (zona === \"Zona Este\" || zona === \"Zona Oeste\" || zona === \"Zona Rural\" || zona === \"zona industrial\") {\n    precioZonaEsteOeste = precioZonaEsteOeste + 130;\n  }\n  let casa = 0;\n  let Propiedadlujo = 0;\n  let edificio = 0;\n  if (propiedad === \"penthouse\" || propiedad === \"loft\" || propiedad === \"casaquinta\") {\n    Propiedadlujo = Propiedadlujo + 7000;\n  }\n  if (propiedad === \"edificio\" || propiedad === \"triplex\" || propiedad === \"duplex\") {\n    edificio = edificio + 5500;\n  }\n  if (propiedad === \"monoambiente\" || propiedad === \"casa de dos ambientes\" || propiedad === \"Casa de 3 Ambientes\") {\n    casa = casa + 3800;\n  }\n  let total = 0;\n  // let PropiedadFinal =0;\n  let totalPrecioMetro = PrecioMetro * metros;\n  // let UbicacionFinal =0;\n\n  //     if(propiedad === \"Ph\"||propiedad === \"Mansion\"||propiedad === \"Loft\"||propiedad === \"Casa 2 Ambientes\"||propiedad ===\"Casa 3 Ambientes\"||propiedad === \"Departamento\"||propiedad === \"Departamento 3 Ambientes\"||propiedad === \"Casaquinta\" ) {  PropiedadFinal= propiedad;}\n  //         if(zona === \"Zona Oeste\"||zona ===\"Zona Sur\"||zona ===\"Zona Este\"||zona ===\"Zona Norte\"||zona ===\"Zona Centro\"||zona ===\"Barrio Privado\"||zona ===\"Microcentro\"||zona ===\"Zona Rural\"){UbicacionFinal=zona ;}\n  //     console.log(UbicacionFinal);  \n  //     PropiedadFinal= parseInt(PropiedadFinal);\n  //         console.log(PropiedadFinal);\n  if (metros > 10 && metros < 501 && isNaN(metros) === false && propiedad !== \"\" && zona !== \"\") {\n    total = total + totalPrecioMetro + precioZonaEsteOeste + precioZonaNorte + precioZonaSur + edificio + Propiedadlujo + casa;\n    let historial = {\n      'id': Math.trunc(Math.random() * 1000),\n      'fecha': DateTime.now().toLocaleString() + ' ' + DateTime.now().toLocaleString(DateTime.TIME_24_SIMPLE),\n      'propiedad': propiedad,\n      'ubicacion': zona,\n      'metrosCuadrados': metros,\n      'poliza': total\n    };\n    const local = JSON.parse(localStorage.getItem(\"datos\")) || [];\n    local.push(historial);\n    localStorage.setItem(\"datos\", JSON.stringify(local));\n    Swal.fire({\n      icon: 'success',\n      title: 'Cotizacion guardada con exito',\n      showConfirmButton: false,\n      timer: 1000\n    });\n    document.querySelector(\".price\").innerHTML = `Cotizacion final $${historial.poliza}`;\n  } else if (metros < 10) {\n    Swal.fire({\n      icon: 'error',\n      title: 'te olvidas de algo!',\n      text: 'el minimo son 10 mts2'\n    });\n  } else if (metros > 500) {\n    Swal.fire({\n      icon: 'error',\n      title: 'te olvidas de algo!',\n      text: 'el maximo a cotizar es de  500 mts2'\n    });\n  } else if (isNaN(metros) === true) {\n    Swal.fire({\n      icon: 'error',\n      title: 'te olvidas de algo!',\n      text: 'debes agregar los metros cuadrados'\n    });\n  }\n};\nexport default useReceive;","map":{"version":3,"names":["DateTime","Swal","useReceive","e","preventDefault","metros","parseInt","target","ingreso","value","propiedad","zona","PrecioMetro","PrecioZona","console","log","PrecioPropiedad","precioZonaNorte","precioZonaSur","precioZonaEsteOeste","casa","Propiedadlujo","edificio","total","totalPrecioMetro","isNaN","historial","Math","trunc","random","now","toLocaleString","TIME_24_SIMPLE","local","JSON","parse","localStorage","getItem","push","setItem","stringify","fire","icon","title","showConfirmButton","timer","document","querySelector","innerHTML","poliza","text"],"sources":["C:/Users/Usuario/Desktop/untrefreactf/src/components/useReceive.jsx"],"sourcesContent":["import { DateTime } from \"luxon\";\nimport Swal from \"sweetalert2\";\n\n\nconst useReceive = (e) => {\n    e.preventDefault();\n\n    let metros = parseInt(e.target.ingreso.value);\n    let propiedad =e.target.propiedad.value; \n    let zona = e.target.zona.value;\n    let PrecioMetro = 20;\n    let PrecioZona=  parseInt(e.target.zona.value);\n\n    console.log(PrecioZona);\n\n    let PrecioPropiedad= parseInt(e.target.propiedad.value);\n\n    console.log(PrecioPropiedad);\n    // console.log(TotalPrecioMetro)\n    // let PrecioPropiedad= parseInt(propiedad.trim());\n    // console.log(PrecioPropiedad)\n    // let PrecioZona = zona; \n    // console.log(PrecioZona)\n        let precioZonaNorte = 0;\n         let precioZonaSur = 0;\n         let precioZonaEsteOeste = 0;\n    // let PrecioFinal = TotalPrecioMetro + (PrecioZona + PrecioPropiedad)*Factor;\n    // console.log(PrecioFinal)\n    if (zona === \"Zona Norte\" || zona === \"Zona Centro\" || zona === \"Barrio Privado\") {\n        precioZonaNorte = precioZonaNorte + 200;\n    } if (zona === \"zona sur\" || zona === \"subirbio\") {\n        precioZonaSur = precioZonaSur + 100;\n    } if (zona === \"Zona Este\" || zona === \"Zona Oeste\" || zona === \"Zona Rural\" || zona === \"zona industrial\") {\n        precioZonaEsteOeste = precioZonaEsteOeste + 130;\n    }\n\n    let casa = 0;\n     let Propiedadlujo = 0;\n      let edificio = 0;\n\n    if (propiedad === \"penthouse\" || propiedad === \"loft\" || propiedad === \"casaquinta\") {\n        Propiedadlujo = Propiedadlujo + 7000;\n    }if(propiedad === \"edificio\" || propiedad ===\"triplex\" || propiedad ===\"duplex\") {\n        edificio = edificio + 5500;\n    }if(propiedad === \"monoambiente\" || propiedad === \"casa de dos ambientes\" || propiedad === \"Casa de 3 Ambientes\") {\n        casa = casa + 3800;\n    }\n    \nlet total=0;\n// let PropiedadFinal =0;\n let totalPrecioMetro = PrecioMetro * metros;\n// let UbicacionFinal =0;\n\n\n//     if(propiedad === \"Ph\"||propiedad === \"Mansion\"||propiedad === \"Loft\"||propiedad === \"Casa 2 Ambientes\"||propiedad ===\"Casa 3 Ambientes\"||propiedad === \"Departamento\"||propiedad === \"Departamento 3 Ambientes\"||propiedad === \"Casaquinta\" ) {  PropiedadFinal= propiedad;}\n//         if(zona === \"Zona Oeste\"||zona ===\"Zona Sur\"||zona ===\"Zona Este\"||zona ===\"Zona Norte\"||zona ===\"Zona Centro\"||zona ===\"Barrio Privado\"||zona ===\"Microcentro\"||zona ===\"Zona Rural\"){UbicacionFinal=zona ;}\n//     console.log(UbicacionFinal);  \n//     PropiedadFinal= parseInt(PropiedadFinal);\n//         console.log(PropiedadFinal);\n    if ((metros > 10 && metros < 501) && isNaN(metros) === false && propiedad !== \"\" && zona !==\"\") {\n      total = total + totalPrecioMetro + precioZonaEsteOeste +\n            precioZonaNorte + precioZonaSur + edificio + Propiedadlujo + casa;\n        let historial = {\n            'id': Math.trunc(Math.random() * 1000),\n            'fecha': DateTime.now().toLocaleString() + ' ' + DateTime.now().toLocaleString(DateTime.TIME_24_SIMPLE),\n            'propiedad': propiedad,\n            'ubicacion': zona,\n            'metrosCuadrados': metros,\n            'poliza':total,\n        \n        }\n\n        const local = JSON.parse(localStorage.getItem(\"datos\")) || [];\n        local.push(historial);\n        localStorage.setItem(\"datos\", JSON.stringify(local));\n        Swal.fire({\n        icon: 'success',\n        title: 'Cotizacion guardada con exito',\n        showConfirmButton: false,\n        timer: 1000\n        });\n\n\n        document.querySelector(\".price\").innerHTML = `Cotizacion final $${historial.poliza}`;\n    } else if (metros < 10) {       \n        Swal.fire({\n                icon: 'error',\n                title: 'te olvidas de algo!',\n                text: 'el minimo son 10 mts2',\n            })\n        ;\n        \n    } else if (metros > 500) {\n        Swal.fire({\n                icon: 'error',\n                title: 'te olvidas de algo!',\n                text: 'el maximo a cotizar es de  500 mts2',\n            })\n        ;\n    } else if (isNaN(metros) === true) {\n        Swal.fire({\n                icon: 'error',\n                title: 'te olvidas de algo!',\n                text: 'debes agregar los metros cuadrados',\n            })\n            ;\n    }\n}\nexport default useReceive;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}